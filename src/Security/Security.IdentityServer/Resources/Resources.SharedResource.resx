<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessFailedCount" xml:space="preserve">
    <value>Fail Login Count</value>
  </data>
  <data name="CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CheckYourLogin" xml:space="preserve">
    <value>Check your credentials.</value>
  </data>
  <data name="Clean" xml:space="preserve">
    <value>Clean</value>
  </data>
  <data name="ComparePassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="ComparePasswordError" xml:space="preserve">
    <value>Passwords are not match.</value>
  </data>
  <data name="ConcurrencyFailure" xml:space="preserve">
    <value>Optimistic concurrency failure, object has been modified.</value>
  </data>
  <data name="CostManagementSystem" xml:space="preserve">
    <value>Cost Management</value>
  </data>
  <data name="CreatedAt" xml:space="preserve">
    <value>Create Date</value>
  </data>
  <data name="DefaultError" xml:space="preserve">
    <value>An unknown failure has occurred.</value>
  </data>
  <data name="DefaultSuccess" xml:space="preserve">
    <value>Operation successfuly completed.</value>
  </data>
  <data name="Deneme" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="DuplicateEmail" xml:space="preserve">
    <value>Email '{0}' is already exists.</value>
  </data>
  <data name="DuplicateUserName" xml:space="preserve">
    <value>User Name '{0}' is already exists.</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="EmailConfirm" xml:space="preserve">
    <value>Email Confirm</value>
  </data>
  <data name="Enter" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="ExitButton" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="ExternalSource" xml:space="preserve">
    <value>Use another service to log in.</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="HasTextile" xml:space="preserve">
    <value>Has Textile</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Email '{0}' is invalid.</value>
  </data>
  <data name="InvalidEmailError" xml:space="preserve">
    <value>Please enter valid an email address.</value>
  </data>
  <data name="InvalidPhoneNumber" xml:space="preserve">
    <value>Invalid phone number.</value>
  </data>
  <data name="InvalidRoleName" xml:space="preserve">
    <value>Role name '{0}' is invalid.</value>
  </data>
  <data name="InvalidToken" xml:space="preserve">
    <value>Invalid token.</value>
  </data>
  <data name="InvalidUserName" xml:space="preserve">
    <value>User name '{0}' is invalid, can only contain letters or digits.</value>
  </data>
  <data name="LoginAlreadyAssociated" xml:space="preserve">
    <value>A user with this login already exists.</value>
  </data>
  <data name="LogOutDescription" xml:space="preserve">
    <value>Select "Logout" below if you are ready to end your current session.</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="OptionLabel" xml:space="preserve">
    <value>Select a value.</value>
  </data>
  <data name="PassWord" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordCompare" xml:space="preserve">
    <value>Compare Password</value>
  </data>
  <data name="PasswordContainsUserName" xml:space="preserve">
    <value>Password contains username.</value>
  </data>
  <data name="PasswordMismatch" xml:space="preserve">
    <value>Incorrect password.</value>
  </data>
  <data name="PasswordRequiresDigit" xml:space="preserve">
    <value>Passwords must have at least one digit ('0'-'9').</value>
  </data>
  <data name="PasswordRequiresLower" xml:space="preserve">
    <value>Passwords must have at least one lowercase ('a'-'z').</value>
  </data>
  <data name="PasswordRequiresNonAlphanumeric" xml:space="preserve">
    <value>Passwords must have at least one non alphanumeric character.</value>
  </data>
  <data name="PasswordRequiresUpper" xml:space="preserve">
    <value>Passwords must have at least one uppercase ('A'-'Z').</value>
  </data>
  <data name="PasswordTooShort" xml:space="preserve">
    <value>Passwords must be at least '{0}' characters.</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="PhoneNumberConfirm" xml:space="preserve">
    <value>PhoneNumber Confirm</value>
  </data>
  <data name="PhonePrefix" xml:space="preserve">
    <value>Phone Prefix</value>
  </data>
  <data name="ReadyToLeave" xml:space="preserve">
    <value>Ready to leave?</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="RequiredError" xml:space="preserve">
    <value>Input is required.</value>
  </data>
  <data name="SafeEntry" xml:space="preserve">
    <value>Safe Entrance</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="StringLengthError" xml:space="preserve">
    <value>The {0} must be between {2} - {1} characters long.</value>
  </data>
  <data name="UserAlreadyHasPassword" xml:space="preserve">
    <value>User already has a password set.</value>
  </data>
  <data name="UserAlreadyInRole" xml:space="preserve">
    <value>User already in role '{0}'.</value>
  </data>
  <data name="UserEmailConfirmed" xml:space="preserve">
    <value>Your email address confirmed.</value>
  </data>
  <data name="UserEmailNotConfirmed" xml:space="preserve">
    <value>Error occurred while your email been confirming.</value>
  </data>
  <data name="UserLocked" xml:space="preserve">
    <value>Your account has been locked</value>
  </data>
  <data name="UserLockoutNotEnabled" xml:space="preserve">
    <value>Lockout is not enabled for this user.</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="UsernameRequired" xml:space="preserve">
    <value>User name is required.</value>
  </data>
  <data name="UserNotFound" xml:space="preserve">
    <value>User notfound.</value>
  </data>
  <data name="UserNotInRole" xml:space="preserve">
    <value>User is not in role '{0}'.</value>
  </data>
</root>