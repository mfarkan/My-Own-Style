<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HasTextile.API</name>
    </assembly>
    <members>
        <member name="M:HasTextile.API.Controllers.CustomerController.FindAllCustomer">
            <summary>
            Returns all active customers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HasTextile.API.Controllers.CustomerController.FindExpenses(System.Guid)">
            <summary>
            Return customer's expense list
            </summary>
            <param name="Id">Customer Unique Id</param>
            <returns>Return customer's info with expense list.</returns>
            <response code="200">Return Customer Info</response>
            <response code="404">Not found customer.</response>
        </member>
        <member name="M:HasTextile.API.Controllers.CustomerController.FindCustomer(System.Guid)">
            <summary>
            Find Customer without expenses.
            </summary>
            <param name="Id">Unique Id</param>
            <returns></returns>
        </member>
        <member name="M:HasTextile.API.Controllers.CustomerController.FilterCustomers(Domain.Service.Model.Customer.Model.CustomerFilterRequestDTO)">
            <summary>
            Filterize customer with some properties.
            </summary>
            <param name="request">QueryString </param>
            <returns></returns>
        </member>
        <member name="M:HasTextile.API.Controllers.CustomerController.DeActivateCustomer(System.Guid)">
            <summary>
            Passivate customer.
            </summary>
            <param name="Id">Customer's Unique Id</param>
            <returns></returns>
        </member>
        <member name="M:HasTextile.API.Controllers.CustomerController.UpdateCustomer(System.Guid,Domain.Service.Model.Customer.Model.CustomerRequestDTO)">
            <summary>
            Update customer
            </summary>
            <param name="Id">Unique customer Id</param>
            <param name="request">Request Payload</param>
            <returns>Customer's Id</returns>
        </member>
        <member name="M:HasTextile.API.Controllers.CustomerController.CreateNewUser(Domain.Service.Model.Customer.Model.CustomerRequestDTO)">
            <summary>
            create a new customer.
            </summary>
            <param name="request">customer request payload</param>
            <returns>New Customer's Id</returns>
        </member>
        <member name="M:HasTextile.API.Controllers.ExpenseController.FindExpense(System.Guid)">
            <summary>
            Return an expense with Unique Id
            </summary>
            <param name="Id">Unique Expense Id</param>
            <returns>An Expense</returns>
            <response code="200">Expense DTO</response>
            <response code="404">Not Found</response>
        </member>
        <member name="M:HasTextile.API.Controllers.ExpenseController.DeActivateExpense(System.Guid)">
            <summary>
            Passivate an Expense
            </summary>
            <param name="Id">Unique Expense Id</param>
            <returns>200 OK</returns>
        </member>
        <member name="M:HasTextile.API.Controllers.ExpenseController.CreateNewExpense(Domain.Service.Model.Expenses.Model.ExpenseRequestDTO)">
            <summary>
            Create New Expense
            </summary>
            <param name="requestDTO">New Expense request payload.</param>
            <returns>New Expense's Id</returns>
            <response code="200">Return Expense's Guid Id</response>
        </member>
        <member name="M:HasTextile.API.Controllers.ExpenseController.FilterExpenses(Domain.Service.Model.Expenses.Model.ExpenseFilterRequestDTO)">
            <summary>
            Return Filtered Expense list.
            </summary>
            <param name="requestDTO">Query String Request</param>
            <returns>List of Expenses</returns>
            <response code="200">Success</response>
        </member>
        <member name="M:HasTextile.API.Controllers.ExpenseController.UpdateExpense(System.Guid,Domain.Service.Model.Expenses.Model.ExpenseRequestDTO)">
            <summary>
            Update an Expense
            </summary>
            <param name="Id">Expense Unique Id</param>
            <param name="requestDTO">Request Payload</param>
            <returns>Return Expense Id</returns>
        </member>
        <member name="M:HasTextile.API.Controllers.InstitutionController.FindAllInstitutions">
            <summary>
            Returns all Institutions
            </summary>
            <returns></returns>
        </member>
        <member name="M:HasTextile.API.Controllers.InstitutionController.FindInstitution(System.Guid)">
            <summary>
            Return a Institution with Id
            </summary>
            <param name="Id">Institution Unique Id</param>
            <returns see="200">OK</returns>
            <returns see="404">Not Found</returns>
        </member>
        <member name="M:HasTextile.API.Controllers.InstitutionController.FindInstitutionsWithFilter(Domain.Service.Model.Institution.Model.InstitutionFilterRequestDTO)">
            <summary>
            Return Filtered List of Institution
            </summary>
            <param name="requestDTO">request Payload</param>
            <returns see="200">Ok</returns>
        </member>
        <member name="M:HasTextile.API.Controllers.InstitutionController.DeActivateInstitution(System.Guid)">
            <summary>
            Passivate Institution
            </summary>
            <param name="Id">Institution Unique Id</param>
            <returns see="200">OK</returns>
        </member>
        <member name="M:HasTextile.API.Controllers.InstitutionController.UpdateInstitution(System.Guid,Domain.Service.Model.Institution.Model.InstitutionRequestDTO)">
            <summary>
            Institution Update
            </summary>
            <param name="Id">Institution Unique Id</param>
            <param name="requestDTO">Request PayLoad</param>
            <returns></returns>
        </member>
        <member name="M:HasTextile.API.Controllers.InstitutionController.CreateNewInstitution(Domain.Service.Model.Institution.Model.InstitutionRequestDTO)">
            <summary>
            Create a new Institution
            </summary>
            <param name="requestDTO">Request payload</param>
            <returns></returns>
        </member>
    </members>
</doc>
